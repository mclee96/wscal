{"version":3,"sources":["backend/morphs.tsv","backend/esv.tsv","backend/na28.tsv","backend/vocab.tsv","backend/Filters.js","backend/Data.js","Vocab.js","App.js","reportWebVitals.js","index.js"],"names":["CASE","GENDER","NUMBER","MOOD","PARTICIPLE","PART","ADJECTIVE","NOUN","PRONOUN","VERB","PERSON","TENSE","VOICE","CHAPTER","GLOSS","LEMMA","RESULT","ESV","NA28","REFERENCE","ALL","Papa","require","Data","Promise","resolve","reject","Object","keys","localStorage","some","key","includes","clear","vocab","length","loadFile","vocabFilepath","contents","rows","parse","delimiter","header","data","forEach","row","push","morphs","morphFilepath","esv","esvFilepath","na28","na28Filepath","id","filepath","callback","getItem","setItem","req","XMLHttpRequest","addEventListener","e","responseText","trim","open","send","filters","filter","field","every","map","references","split","reference","Math","floor","random","assign","validFields","values","getRecords","fields","reduce","l","r","groupby","join","arr","chapters","Vocab","props","state","display","selected","parts","criteria","searchTimeout","onSelect","bind","search","addAll","togglePart","loadData","then","setState","prevProps","this","part","partIndex","indexOf","slice","concat","preventDefault","clearTimeout","setTimeout","filtered","crit","range","replaceAll","num","isNaN","parseInt","i","normalized","normalize","replace","endsWith","toString","vocabHeadings","columnWidths","style","maxWidth","Alert","variant","textAlign","borderColor","Row","className","Col","Form","onSubmit","target","value","InputGroup","size","Control","type","placeholder","onChange","Button","disabled","ToggleButtonGroup","ToggleButton","lineHeight","fontSize","onClick","height","width","columnCount","columnWidth","index","rowCount","rowHeight","columnIndex","rowIndex","checked","padding","fontWeight","React","Component","App","records","limit","flashcardFields","flashcards","flashcardsPreview","showVocab","toggleFilter","updateFields","updateFlashcardFields","updateRecords","toggleSelect","downloadRecords","getSelected","currFilters","newFilters","splice","mode","disp","select","getFlashcards","flashcardsIndex","text","blob","Blob","outputFilename","Date","toLocaleString","hour12","filterSet","substr","saveAs","flattened","Container","fluid","sm","md","lg","xl","xxl","Collapse","in","dimension","Badge","pill","bg","as","borderWidth","marginTop","ButtonToolbar","justifyContent","filterType","filterValue","ButtonGroup","defaultValue","active","Table","responsive","striped","bordered","hover","whiteSpace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.319bf81b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/morphs.8d5cd39d.tsv\";","export default __webpack_public_path__ + \"static/media/esv.fe2ed14b.tsv\";","export default __webpack_public_path__ + \"static/media/na28.19940234.tsv\";","export default __webpack_public_path__ + \"static/media/vocab.830e3c37.tsv\";","// case\nexport const CASE = \"Case\" \nexport const NOMINATIVE = \"nominative\"\nexport const GENITIVE = \"genitive\"\nexport const DATIVE = \"dative\"\nexport const ACCUSATIVE = \"accusative\"\nexport const VOCATIVE = \"vocative\"\n\n// gender\nexport const GENDER = \"Gender\";\nexport const FEMININE = \"feminine\"\nexport const MASCULINE = \"masculine\"\nexport const NEUTER = \"neuter\"\n\n// number\nexport const NUMBER = \"Number\"\nexport const SINGULAR = \"singular\"\nexport const PLURAL = \"plural\"\n\n// mood\nexport const MOOD = \"Mood\"\nexport const INDICATIVE = \"indicative\"\nexport const IMPERATIVE = \"imperative\"\nexport const INFINITIVE = \"infinitive\"\nexport const SUBJUNCTIVE = \"subjunctive\"\nexport const PARTICIPLE = \"participle\"\n\n// part of speech\nexport const PART = \"Part\"\nexport const ADJECTIVE = \"adjective\"\nexport const ADVERB = \"adverb\"\nexport const CONJUNCTION = \"conjunction\"\nexport const NOUN = \"noun\"\nexport const PREPOSITION = \"preposition\"\nexport const PRONOUN = \"pronoun\"\nexport const VERB = \"verb\"\n\n// person\nexport const PERSON = \"Person\"\nexport const FIRST = \"first person\"\nexport const SECOND = \"second person\"\nexport const THIRD = \"third person\"\n\n// tense\nexport const TENSE = \"Tense\"\nexport const AORIST = \"aorist\"\nexport const PERFECT = \"perfect\"\nexport const PRESENT = \"present\"\nexport const FUTURE = \"future\"\nexport const IMPERFECT = \"imperfect\"\n\n// voice\nexport const VOICE = \"Voice\"\nexport const MIDDLE = \"middle\"\nexport const PASSIVE = \"passive\"\nexport const ACTIVE = \"active\"\n\n// other headers\nexport const CHAPTER = \"Chapter\";\nexport const GLOSS = \"Gloss\";\nexport const LEMMA = \"Lemma\";\nexport const RESULT = \"Result\"\nexport const TEXT = \"Text\"\nexport const ADVERB_TYPE = \"Adverb/particle Type\"\n\n// bibles\nexport const ESV = \"Esv\"\nexport const NA28 = \"Na28\"\nexport const ABBR = \"Abbr\"\nexport const REFERENCE = \"Reference\"\n\nexport const ALL = {\n  [PART]: [ADJECTIVE, NOUN, VERB, PRONOUN],\n  [GENDER]: [FEMININE, MASCULINE, NEUTER],\n  [CASE]: [NOMINATIVE, GENITIVE, DATIVE, ACCUSATIVE, VOCATIVE],\n  [TENSE]: [PRESENT, IMPERFECT, FUTURE, AORIST, PERFECT],\n  [VOICE]: [ACTIVE, MIDDLE, PASSIVE],\n  [NUMBER]: [SINGULAR, PLURAL],\n  [MOOD]: [INDICATIVE, IMPERATIVE, INFINITIVE, SUBJUNCTIVE, PARTICIPLE]\n}\n\nexport default ALL\n","import morphFilepath from './morphs.tsv'\nimport esvFilepath from './esv.tsv'\nimport na28Filepath from './na28.tsv'\nimport vocabFilepath from './vocab.tsv'\n\nimport { ABBR, CHAPTER, ESV, PART, RESULT, LEMMA, GENDER, CASE, NUMBER, GLOSS, TENSE, VOICE, MOOD, PERSON, NA28, REFERENCE, TEXT, PARTICIPLE } from './Filters.js'\n\nconst Papa = require('papaparse');\n\nclass Data {\n  static vocab = []\n  static morphs = []\n  static esv = {}\n  static na28 = {}\n\n  // idempotent\n  static loadData() {\n    return new Promise((resolve, reject) => {\n      // legacy reset\n      if (Object.keys(localStorage).some(key => key.includes('/wscal/static/media'))) {\n        localStorage.clear()\n      }\n\n      if (Data.vocab.length === 0) {\n        Data.loadFile('vocab', vocabFilepath, (contents) => {\n          let rows = []\n          Papa.parse(contents, { delimiter: '\\t', header: true }).data\n            .forEach(row => rows.push(row))\n          Data.vocab = rows\n          resolve(Data.vocab)\n        })\n      } else {\n        resolve(Data.vocab)\n      }\n\n      if (Data.morphs.length === 0) {\n        Data.loadFile('morphs', morphFilepath, (contents) => {\n            let rows = []\n            Papa.parse(contents, { delimiter: '\\t', header: true }).data\n              .forEach(row => rows.push(row))\n            Data.morphs = rows\n        })\n      }\n\n      if (Object.keys(Data.esv).length === 0) {\n        Data.loadFile('esv', esvFilepath, (contents) => {\n          Papa.parse(contents, { delimiter: '\\t', header: true }).data\n            .forEach(row => Data.esv[row[ABBR]] = row[TEXT])\n        })\n      }\n\n      if (Object.keys(Data.na28).length === 0) {\n        Data.loadFile('na28', na28Filepath, (contents) => {\n          Papa.parse(contents, { delimiter: '\\t', header: true }).data\n            .forEach(row => Data.na28[row[ABBR]] = row[TEXT])\n        })\n      }\n    })\n  }\n\n  static loadFile(id, filepath, callback) {\n    if (localStorage.getItem(id) != null && localStorage.getItem(id + '_filepath') === filepath) {\n      // cached result\n      if (callback) {\n        callback(localStorage.getItem(id))\n      }\n    } else {\n      localStorage.setItem(id + '_filepath', filepath)\n      let req = new XMLHttpRequest();\n      req.addEventListener(\"load\", (e) => {\n        localStorage.setItem(id, req.responseText.trim())\n        if (callback) {\n          callback(req.responseText.trim())\n        }\n      })\n      req.open(\"GET\", filepath);\n      req.send();\n    }\n  }\n\n  static getRecords(filters) {\n    return Data.morphs\n      .filter(row => Object.keys(filters)\n          .filter(field => filters[field].length !== 0)\n          .every(field => row[field] === '-' || filters[field].includes(row[field])))\n      .filter(row => row[CHAPTER] !== '-')\n      .map(row => {\n        let references = row[REFERENCE].split(',')\n        let reference = references[Math.floor((Math.random() * references.length))]\n        return Object.assign(\n            {}, \n            row, \n            { \n              [REFERENCE]: reference,\n              [ESV]: Data.esv[reference],\n              [NA28]: Data.na28[reference],\n            })\n      })\n  }\n\n  static getFlashcards(filters, validFields) {\n    return Object.values(\n        Data.getRecords(filters)\n          .map(row => {\n            var fields;\n            switch (row[PART]) {\n              case \"noun\":\n                fields = [ RESULT, LEMMA, GLOSS, GENDER, CASE, NUMBER, ESV ]; break;\n              case \"verb\":\n                fields = (row[MOOD] === PARTICIPLE)\n                  ? [ RESULT, LEMMA, GLOSS, TENSE, VOICE, MOOD, GENDER, CASE, NUMBER, ESV ]\n                  : [ RESULT, LEMMA, GLOSS, TENSE, VOICE, MOOD, PERSON, NUMBER, ESV ]; \n                break;\n              case \"adjective\":\n                fields = [ RESULT, LEMMA, GLOSS, GENDER, CASE, NUMBER, ESV ]; break;\n              case \"conjunction\":\n              case \"preposition, adverb\":\n              case \"preposition\":\n                fields = [ RESULT, LEMMA, GLOSS, ESV ]; break;\n              case \"pronoun\":\n              case \"pronoun, adjective\":\n              case \"adjective, pronoun\":\n                fields = [ RESULT, LEMMA, GLOSS, PERSON, GENDER, CASE, NUMBER, ESV ]; break;\n              default:\n                fields = [ RESULT ]; break;\n            }\n            return [row, fields.filter(field => validFields.includes(field))]\n          })\n          .reduce((l, r) => {\n            let groupby = r[1].filter(field => field !== ESV).map(field => r[0][field]).join()\n            l[groupby] = (l[groupby] || r)\n            return l\n          }, {}))\n          .map(arr => {\n            let row = arr[0]\n            let fields = arr[1]\n\n            let front = row[RESULT]\n            let back = fields\n              .map(field => {\n                if (field === GLOSS) {\n                  return '(\"' + row[GLOSS]+ '\")';\n                } else if (field === ESV) {\n                  return \"<> \" + row[REFERENCE] + \" \" + row[ESV]\n                } else {\n                  return row[field]\n                }\n              })\n              .join(\" \")\n            return [front, back]\n          })\n  }\n\n  static getVocab(chapters) {\n    if (chapters) {\n      return Data.vocab\n        .filter(row => chapters.includes(row[CHAPTER]))\n    } else {\n      return Data.vocab\n    }\n  }\n}\n\nexport default Data;\n","import React from 'react'\n\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Row from 'react-bootstrap/Row'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\n\nimport { VariableSizeGrid } from 'react-window'\n\nimport Data from './backend/Data.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {LEMMA, CHAPTER, GLOSS, PART } from './backend/Filters.js'\nimport {NOUN, VERB, ADJECTIVE, PREPOSITION, PRONOUN, ADVERB, CONJUNCTION } from './backend/Filters.js'\n\nclass Vocab extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      display: [],\n      selected: props.selected,\n      parts: [],\n    }\n\n    this.criteria = ''\n    this.searchTimeout = 0\n    this.vocab = []\n    this.onSelect = props.onSelect.bind(this)\n\n    this.search = this.search.bind(this)\n    this.addAll = this.addAll.bind(this)\n    this.togglePart = this.togglePart.bind(this)\n  }\n\n  componentDidMount() {\n    Data.loadData().then((vocab) => {\n      this.vocab = vocab\n      this.setState({ display: vocab })\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.selected !== this.props.selected) {\n      this.setState({ selected: this.props.selected })\n    }\n  }\n\n  togglePart(part) {\n    this.setState((state, props) => {\n      let partIndex = state.parts.indexOf(part)\n      let parts = (partIndex > -1) \n          // remove\n          ?  state.parts.slice(0, partIndex).concat(state.parts.slice(partIndex + 1))\n          // add\n          :  [...state.parts].concat([part])\n      return {\n        parts: parts,\n        display: this.filter(this.criteria, parts)\n      }\n    })\n  }\n\n  search(criteria, e) {\n    this.criteria = criteria\n    e.preventDefault()\n\n    if (this.searchTimeout) {\n      clearTimeout(this.searchTimeout)\n    }\n\n    this.searchTimeout = \n      setTimeout(() => this.setState({ display: this.filter(criteria, this.state.parts) }), 100)\n  }\n\n  addAll(criteria, e) {\n    e.preventDefault()\n\n    criteria = criteria ? criteria : 'all'\n    let display = this.state.parts\n      ? criteria + ' ' + this.state.parts.map(part => part + 's').join()\n      : criteria\n    this.onSelect(display, this.filter(criteria, this.state.parts), 'add')\n  }\n\n  filter(criteria, parts) {\n    let filtered = []\n    criteria.trim().split(',')\n      .map(crit => {\n          var search = crit.trim()\n\n          // reset if no search\n          if (!search) {\n            return this.vocab\n          }\n\n          // handle number searching\n          var range = crit.replaceAll('ch', '').split('-')\n          if (range.every(num => !isNaN(num))) {\n            if (range.length < 2) {\n              range.push(parseInt(range[0]))\n            }\n            var rows = []\n            for (var i = parseInt(range[0]); i < parseInt(range[1]) + 1; i++) {\n              rows = rows.concat(\n                this.vocab\n                    .filter(row => {\n                      let normalized = Object.values(row)\n                        .join()\n                        .normalize('NFD')\n                        .replace(/[\\u0300-\\u036f]/g, \"\")\n                      return normalized.endsWith(',' + i.toString())\n                          && (parts.length === 0 || parts.some(part => normalized.includes(',' + part + ',')))\n                    }))\n            }\n            return rows\n          }\n\n          // handle plural and abbreviations\n          switch (search) {\n            case 'nouns':\n            case 'nns':\n            case 'nn': search = 'noun'; break;\n            case 'verbs':\n            case 'vbs':\n            case 'vb': search = 'verb'; break;\n            case 'adjectives':\n            case 'adjs':\n            case 'adj': search = 'adjective'; break;\n            case 'prepositions':\n            case 'preps':\n            case 'prep': search = 'preposition'; break;\n            case 'conjunctions':\n            case 'conjs':\n            case 'conj': search = 'conjunction'; break;\n            case 'adverbs':\n            case 'advbs':\n            case 'advb':\n            case 'adv': search = 'adverb'; break;\n            default:\n          }\n\n          let partsArr = ['noun', 'verb', 'adjective', 'preposition', 'conjunction', 'adverb']\n\n          // handle part searching\n          if (partsArr.includes(search)) {\n            return this.vocab\n                .filter(row => Object.values(row)\n                    .join()\n                    .normalize('NFD')\n                    .replace(/[\\u0300-\\u036f]/g, \"\")\n                    .includes(',' + search.normalize('NFD') + ','))\n          }\n\n          // default search\n          return this.vocab\n              .filter(row => {\n                let normalized = Object.values(row)\n                  .join()\n                  .normalize('NFD')\n                  .replace(/[\\u0300-\\u036f]/g, \"\")\n                return normalized.includes(search.normalize('NFD'))\n                    && (parts.length === 0 || parts.some(part => normalized.includes(',' + part + ',')))\n              })\n      })\n      .forEach(arr => filtered = filtered.concat(arr))\n\n    return filtered\n  }\n\n  render() {\n    const vocabHeadings = [LEMMA, CHAPTER, PART, GLOSS]\n    const columnWidths = [50, 120, 30, 100, 500]\n\n    return (\n      <div style={{ maxWidth: '19em' }}>\n        <Alert variant='light' style={{ textAlign: 'left', borderColor: 'lightgrey' }}>\n          <h5>(1) vocab</h5>\n          <Row className=\"me-1\">\n            <Col>\n              <Form onSubmit={(e) => this.addAll(e.target[0].value, e)}>\n                <InputGroup size=\"sm\">\n                  <Form.Control\n                    type=\"text\"\n                    id=\"wat\"\n                    aria-label=\"chapter restrictions (e.g. 2 or 2,3 or 2-4)\"\n                    aria-describedby=\"basic-addon1\"\n                    placeholder='e.g. \"ch2-7 verbs\" or \"πας\"'\n                    onChange={(e) => this.search(e.target.value, e)} />\n                  <Button\n                    disabled={this.state.display.length <= 0}\n                    size=\"sm\"\n                    type=\"submit\">Add All ({this.state.display.length})</Button>\n                </InputGroup>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <InputGroup size=\"sm\">\n                <ToggleButtonGroup type=\"checkbox\" size=\"sm\">\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"nouns\" \n                    id=\"nouns-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(NOUN, e)}>\n                    n.\n                  </ToggleButton>\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"verbs\" \n                    id=\"verbs-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(VERB, e)}>\n                    v.\n                  </ToggleButton>\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"adjectives\" \n                    id=\"adjectives-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(ADJECTIVE, e)}>\n                    adj.\n                  </ToggleButton>\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"prepositions\" \n                    id=\"prepositions-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(PREPOSITION, e)}>\n                    prep.\n                  </ToggleButton>\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"pronouns\" \n                    id=\"pronouns-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(PRONOUN, e)}>\n                    pron.\n                  </ToggleButton>\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"adverb\" \n                    id=\"adverbs-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(ADVERB, e)}>\n                    adv.\n                  </ToggleButton>\n                  <ToggleButton \n                    variant=\"outline-secondary\" \n                    value=\"conjunctions\" \n                    id=\"conjunctions-filter\" \n                    style={{ lineHeight: 1, fontSize: '.75em' }}\n                    onClick={(e) => this.togglePart(CONJUNCTION, e)}>\n                    conj.\n                  </ToggleButton>\n                </ToggleButtonGroup>\n              </InputGroup>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col>\n              <VariableSizeGrid\n                height={480}\n                width={280}\n                columnCount={5}\n                columnWidth={index => columnWidths[index]}\n                rowCount={this.state.display.length}\n                rowHeight={index => 30}>\n                {({ columnIndex, rowIndex, style }) => (\n                  <div style={Object.assign({}, style, { textAlign: 'left' })}>\n                    {columnIndex === 0\n                      ? <ToggleButton\n                          className=\"ms-2\"\n                          id={rowIndex}\n                          type=\"checkbox\"\n                          value={rowIndex}\n                          variant=\"outline-primary\"\n                          checked={this.state.selected.includes(this.state.display[rowIndex])}\n                          onClick={ () => this.onSelect(\n                              this.state.display[rowIndex][LEMMA], \n                              [this.state.display[rowIndex]],\n                              'toggle') }\n                          style={{ lineHeight: 1, \n                                   fontSize: '.75em', \n                                   padding: '.35em .65em',\n                                   fontWeight: 700 }}>\n                          +\n                        </ToggleButton>\n                      : this.state.display[rowIndex][vocabHeadings[columnIndex - 1]]\n                    }\n                  </div>\n                )}\n              </VariableSizeGrid>\n            </Col>\n          </Row>\n          {/*\n          <div>\n            <hr />\n          </div>\n          <div>\n          * chapters 1-30 cover S.M. Baugh's \"A Greek Primer\"\n          </div>\n          <div>\n          * chapters  31-42 cover S.M. Baugh's \"First John Reader\"\n          </div>\n          <div>\n          * so-called \"chapters\" beyond that are just...\n          </div>\n          */}\n        </Alert>\n      </div>\n    );\n  }\n}\n\nexport default Vocab;\n","import './App.css';\nimport React from 'react'\n\nimport Alert from 'react-bootstrap/Alert'\nimport Badge from 'react-bootstrap/Badge'\nimport Button from 'react-bootstrap/Button'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\nimport Col from 'react-bootstrap/Col'\nimport Collapse from 'react-bootstrap/Collapse'\nimport Container from 'react-bootstrap/Container'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Row from 'react-bootstrap/Row'\nimport Table from 'react-bootstrap/Table'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\n\nimport Data from './backend/Data.js'\nimport Vocab from './Vocab.js'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { saveAs } from 'file-saver';\n\n\nimport {ALL, ADVERB_TYPE, RESULT, LEMMA, CASE, GENDER, NUMBER, MOOD, PERSON, TENSE, VOICE, CHAPTER, GLOSS, REFERENCE, ESV, NA28} from './backend/Filters.js'\nimport {PART, NOUN, VERB, ADJECTIVE, PREPOSITION, PRONOUN, ADVERB, CONJUNCTION } from './backend/Filters.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      records: [],\n      display: [],\n      filters: {},\n      fields: [RESULT, LEMMA, GENDER, CASE, TENSE, VOICE, MOOD, PERSON, NUMBER, GLOSS, PART, CHAPTER],\n      limit: 10,\n      flashcardFields: [RESULT, LEMMA, GENDER, CASE, NUMBER, GLOSS, TENSE, VOICE, MOOD, PERSON, ESV],\n      flashcards: [],\n      flashcardsPreview: [],\n\n      showVocab: true,\n      selected: {},   // map of (criteria -> array of vocab rows)\n    };\n\n    this.vocab = []\n\n    this.toggleFilter = this.toggleFilter.bind(this)\n    this.updateFields = this.updateFields.bind(this)\n    this.updateFlashcardFields = this.updateFlashcardFields.bind(this)\n    this.updateRecords = this.updateRecords.bind(this)\n    this.toggleSelect = this.toggleSelect.bind(this)\n    this.downloadRecords = this.downloadRecords.bind(this)\n    this.getSelected = this.getSelected.bind(this)\n  }\n\n  static fields = \n    [RESULT, LEMMA, GENDER, CASE, TENSE, VOICE, MOOD, PERSON, NUMBER, GLOSS, PART, CHAPTER, ADVERB_TYPE, REFERENCE, ESV, NA28]\n  static flashcardFields =\n    [RESULT, LEMMA, GENDER, CASE, NUMBER, GLOSS, TENSE, VOICE, MOOD, PERSON, ESV]\n\n  componentDidMount() {\n    Data.loadData().then((vocab) => { this.vocab = vocab })\n  }\n\n  toggleFilter(type, value) {\n    this.setState((state, props) => {\n      let currFilters = state.filters[type] || []\n      let newFilters = currFilters.slice()\n\n      if (currFilters.includes(value)) {\n        newFilters.splice(newFilters.indexOf(value), 1)\n      } else {\n        newFilters.push(value)\n      }\n\n      return { filters: Object.assign({}, state.filters, { [type]: newFilters }) }\n    })\n    // TODO: refresh here?\n  }\n\n  toggleSelect(display, rows, mode) {\n    if (mode === 'toggle') {\n      mode = (Object.keys(this.state.selected).some(disp => disp === display))\n        ? 'remove'\n        : 'add'\n    }\n\n    if (mode === 'add') {\n      this.setState((state, props) => {\n        return {\n          selected: Object.assign({}, state.selected, { [display]: rows })\n        }\n      })\n    }\n\n    if (mode === 'remove') {\n      let select = Object.assign({}, this.state.selected)\n      delete select[display]\n      this.setState((state, props) => {\n        return { selected: select }\n      })\n    }\n  }\n\n  updateFields(value) { this.setState((state, props) => {\n      let fields = (state.fields || []).slice()\n      if (fields.includes(value)) {\n        fields.splice(fields.indexOf(value), 1)\n      } else {\n        fields.push(value)\n      }\n\n      return { fields: fields }\n    })\n  }\n\n  updateFlashcardFields(value) {\n    this.setState((state, props) => {\n      let flashcardFields = (state.flashcardFields || []).slice()\n      if (flashcardFields.includes(value)) {\n        flashcardFields.splice(flashcardFields.indexOf(value), 1)\n      } else {\n        flashcardFields.push(value)\n      }\n\n      return { flashcardFields: flashcardFields }\n    })\n  }\n\n  updateRecords() {\n    let filters = Object.assign({}, this.state.filters)\n\n    var vocab = []\n    Object.values(this.state.selected)\n      .forEach(arr => vocab = vocab.concat(arr))\n    filters[LEMMA] = vocab.map(row => row[LEMMA])\n\n    let records = Data.getRecords(filters)\n    let flashcards = Data.getFlashcards(filters, this.state.flashcardFields)\n    const index = Math.floor(Math.random() * records.length - this.state.limit)\n    const flashcardsIndex = flashcards.length > this.state.limit\n      ?  Math.floor(Math.random() * (flashcards.length - this.state.limit))\n      : 0\n\n    this.setState(\n    { \n      records: records,\n      display: records.slice(index, index + this.state.limit),\n      flashcards: flashcards,\n      flashcardsPreview: flashcards.slice(flashcardsIndex, flashcardsIndex + this.state.limit),\n    })\n  }\n\n  downloadRecords() {\n    var text = this.state.flashcards.map(row => row[0] + '\\t' + row[1]).join('\\n')\n    var blob = new Blob([ text ], { type: \"text/plain;charset=utf-8\" })\n\n    var outputFilename = new Date().toLocaleString('en-US', { hour12: false }).replaceAll('/', '.').replaceAll(':', '∶').replace(', ', '_') + '_flashcards_'\n    if (this.state.selected !== null) {\n      outputFilename += Object.keys(this.state.selected).join()\n    }\n    if (Object.values(this.state.filters).some(filterSet => filterSet.length > 0)) {\n      outputFilename += '_'\n      outputFilename += Object.values(this.state.filters).map(filterSet => filterSet.join(',')).join('_')\n    }\n    if (outputFilename.length > 100) {\n      outputFilename = outputFilename.substr(0, 100) + '...(full name cut off)'\n    }\n    outputFilename += '.tsv'\n    saveAs(blob, outputFilename)\n  }\n\n  getSelected() {\n    var flattened = []\n    Object.values(this.state.selected)\n      .forEach(arr => flattened = flattened.concat(arr))\n    return flattened\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p></p>\n        </header>\n        <Container fluid>\n          <Row>\n            <Col sm=\"auto\" md=\"auto\" lg=\"auto\" xl=\"auto\" xxl=\"auto\">\n              <ToggleButton \n                id=\"show-vocab\"\n                value=\"show-vocab\"\n                type=\"checkbox\"\n                variant=\"outline-primary\"\n                size=\"sm\"\n                checked={this.state.showVocab}\n                onClick={() => this.setState({ showVocab: !this.state.showVocab })}>\n                >\n              </ToggleButton>\n            </Col>\n          </Row>\n          <Row className=\"mt-3\">\n            <Col sm=\"auto\" md=\"auto\" lg=\"auto\" xl=\"auto\" xxl=\"auto\" className=\"pe-0\">\n              <Collapse in={this.state.showVocab} dimension=\"width\">\n                <div>\n                  <Vocab \n                    selected={this.getSelected()}\n                    onSelect={this.toggleSelect}/>\n                </div>\n              </Collapse>\n            </Col>\n            <Col className=\"ps-0\">\n              <Alert variant=\"success\" style={{ textAlign: 'left' }}>\n                <Row>\n                  <h5>(1) I want to study...</h5>\n                  <Row>\n                    <Col>\n                      {Object.keys(this.state.selected).map(display => (\n                          <Badge pill\n                            key={display}\n                            className='me-1'\n                            bg=\"primary\"\n                            as=\"button\" \n                            style={{ borderWidth: 'thin' }}\n                            onClick={() => this.toggleSelect(display, [], 'remove')}>\n                            {display}\n                          </Badge>\n                        ))\n                      }\n                    </Col>\n                  </Row>\n                </Row>\n                <Row style={{ marginTop: '1rem' }}>\n                  <h5>(2) ...with filters...</h5>\n                {/* filter selection */}\n                  <ButtonToolbar style={{justifyContent: 'space-between'}}>\n\n                  {Object.keys(ALL)\n                    .filter(field => field !== PART)\n                    .map(filterType => (\n                    <ToggleButtonGroup id={filterType} key={filterType} type=\"checkbox\" size=\"sm\" >\n                      {ALL[filterType].map(filterValue => (\n                        <ToggleButton key={filterValue} id={filterValue} value={filterValue} variant='outline-success' onClick={(e) => this.toggleFilter(filterType, filterValue, e)}>\n                          {filterValue}\n                        </ToggleButton>\n                      ))}\n                    </ToggleButtonGroup>\n                  ))}\n                  </ButtonToolbar>\n                </Row>\n              </Alert>\n              {/*\n              <Alert variant=\"dark\" style={{ textAlign: 'left' }}>\n              </Alert>\n              */}\n              <Alert variant=\"danger\" style={{ textAlign: 'left' }}>\n                <h5>(3) ...adjust flashcard fields...</h5>\n                <Row>\n                  <ButtonGroup defaultValue={this.state.flashcardFields} size=\"sm\">\n                    {App.flashcardFields.map(field => (\n                      <Button key={field} id={field} value={field} active={this.state.flashcardFields.includes(field)} variant='outline-secondary' onClick={(e) => this.updateFlashcardFields(field, e)}>\n                        {field}\n                      </Button>\n                    ))\n                    }\n                  </ButtonGroup>\n                </Row>\n              </Alert>\n              <Alert variant=\"info\" style={{ textAlign: 'left' }}>\n                  <Row>\n                    <Col>\n                      <h5>(4) ...preview!</h5>\n                    </Col>\n                    {/* refresh! */}\n                    <Col style={{ textAlign: 'right' }}>\n                      <Button onClick={this.updateRecords} variant=\"primary\">\n                        Refresh!\n                      </Button>\n                    </Col>\n                  </Row>\n                  {/* preview dataset */}\n                  <Row>\n                    <Table responsive striped bordered hover size=\"sm\">\n                      <thead>\n                        <tr>\n                          <th key='front' style={{whiteSpace: 'nowrap'}}>Front</th>\n                          <th key='back' style={{whiteSpace: 'nowrap'}}>Back</th>\n                          {/*\n                          {App.fields.filter(field => this.state.fields.includes(field)).map(field => (\n                              <th key={field} style={{whiteSpace: 'nowrap'}}>{field}</th>\n                          ))}\n                          */}\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {\n                          this.state.flashcardsPreview.map(row => (\n                            <tr key={'tr-' + row[0] + row[1]}>\n                              <td key='front' style={{whiteSpace: 'nowrap'}}>{row[0]}</td>\n                              <td key='back' style={{whiteSpace: 'nowrap'}}>{row[1]}</td>\n                              {/*\n                              {App.fields.filter(field => this.state.fields.includes(field)).map(field => (\n                                <td key={field} style={{whiteSpace: 'nowrap'}}>{record[field]}</td>\n                              ))}\n                              */}\n                            </tr>\n                          ))\n                        }\n                      </tbody>\n                    </Table>\n                  </Row>\n              </Alert>\n              {/* header section */}\n              <Alert variant=\"secondary\" style={{ textAlign: 'left' }}>\n                <h5>(5) Download flashcards</h5>\n                <Row>\n                  <Col>\n                    <Button onClick={this.downloadRecords}>\n                      Download Set ({this.state.flashcards.length} flashcards)\n                    </Button>\n                  </Col>\n                </Row>\n              </Alert>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}